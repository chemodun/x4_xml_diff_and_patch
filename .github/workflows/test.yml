name: Test

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Specify the Python version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Install PyInstaller
      - name: Install PyInstaller
        run: |
          pip install pyinstaller

      # Step 5: Build Executables with Nuitka
      - name: Build Executable with Nuitka
        run: |
          pyinstaller xml-diff.py
          pyinstaller xml-patch.py
          Compress-Archive -Path dist -DestinationPath dist.zip
          rm -r dist
          pyinstaller xml-diff.py --onefile
          pyinstaller xml-patch.py --onefile
          Compress-Archive -Path dist\ -DestinationPath dist-onefile.zip
          ls -l .
        shell: powershell

      #Step 6: Upload Executables as Artifacts
      - name: Upload Executables as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: executables-upload
          path: |
            dist.zip
            dist-onefile.zip
        env:
          GITHUB_TOKEN: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}


      # Step 9: Scan with VirusTotal
      -
        name: VirusTotal Scan
        uses: crazy-max/ghaction-virustotal@v4
        with:
          # update_release_body: true
          vt_api_key: ${{ secrets.VT_API_KEY }}
          github_token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          request_rate: 4
          files: |
            .exe$
