name: Build Executables

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Specify the Python version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Install PyInstaller
      - name: Install PyInstaller
        run: pip install pyinstaller

      # Step 5: Build Executables with PyInstaller (Linux)
      - name: Build Executable with PyInstaller (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller --onefile xml-diff.py
          pyinstaller --onefile xml-patch.py
          cd dist
          mkdir -p x4_xml_diff_and_patch
          cp xml-diff x4_xml_diff_and_patch/
          cp xml-patch x4_xml_diff_and_patch/
          tar -czvf x4_xml_diff_and_patch_linux.tar.gz x4_xml_diff_and_patch
        shell: bash

      # Step 6: Build Executables with PyInstaller (Windows)
      - name: Build Executable with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --onefile xml-diff.py
          pyinstaller --onefile xml-patch.py
          cd dist
          mkdir -p  x4_xml_diff_and_patch
          cp xml-diff.exe x4_xml_diff_and_patch/
          cp xml-patch.exe x4_xml_diff_and_patch/
          Compress-Archive -Path x4_xml_diff_and_patch -DestinationPath x4_xml_diff_and_patch_windows.zip
        shell: powershell

      # Step 7: Upload Executables as Artifacts
      - name: Upload Executables as Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: executables-${{ matrix.os }}
          path: |
            dist/x4_xml_diff_and_patch${{ matrix.os == 'windows-latest' && '_windows.zip' || '_linux.tar.gz' }}
        env:
          GITHUB_TOKEN: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}

      # Step 8: Attach Linux Diff and Patch Archive to Release
      - name: Attach Linux Diff Executable to Release
        uses: softprops/action-gh-release@v1
        if: matrix.os == 'ubuntu-latest'
        with:
          files: ./dist/x4_xml_diff_and_patch_linux.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}

      # Step 9: Attach Windows Diff and Patch Archive to Release
      - name: Attach Windows Diff Executable to Release
        uses: softprops/action-gh-release@v1
        if: matrix.os == 'windows-latest'
        with:
          files: ./dist/x4_xml_diff_and_patch_windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}

      - name: VirusTotal Scan
        uses: crazy-max/ghaction-virustotal@v4
        with:
          update_release_body: true
          vt_api_key: ${{ secrets.VT_API_KEY }}
          files: |
            *.zip
            *.tar.gz